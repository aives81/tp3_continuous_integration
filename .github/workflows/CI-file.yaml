name: CI

permissions:
  actions: read
  contents: read

on:
  push:
    branches:
      - main
      - develop
      - CI-test
      - CI-test-yves
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
      - run: yarn install --immutable
      - run: yarn test
  
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn build
  
  mkdocs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-python@v2
        with:
          python-version: '3.13'
      - run: pip install mkdocs
      - run: mkdocs build

  format:
    runs-on: ubuntu-latest
    needs: mkdocs
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn format:write
      - run: yarn format:check
  
  docker-deploy:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Build Docker image
        run: docker image build -t mon_app_remix_js -f Dockerfile .

      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo docker tag $DOCKER_USERNAME/mon_app_remix_js $DOCKER_USERNAME/mon_app_remix_js:latest
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_USERNAME/mon_app_remix_js:latest